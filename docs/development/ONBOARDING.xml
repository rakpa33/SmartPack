<?xml version="1.0" encoding="UTF-8"?>
<document>
  <metadata>
    <title>Onboarding Guide for SmartPack</title>
    <type>development_documentation</type>
    <purpose>
      - Complete setup guide for development environment (Node.js, Ollama AI, dependencies)
      - Step-by-step onboarding workflow with verification checkpoints
      - Current project status summary with enhanced AI features and testing coverage
      - Key documentation navigation for new contributors
      - Development workflow patterns and daily procedures
      - Integration testing guidance for enhanced AI and professional UI features
    </purpose>
    <target_audience>
      - New developers joining the SmartPack project
      - AI assistants providing onboarding support
      - Contributors returning after extended absence
      - Deployment engineers setting up production environments
      - QA engineers validating complete system functionality
    </target_audience>
    <when_to_update>
      <list>
        <item>DEPENDENCY CHANGES: Node.js version updates, npm version changes, new required tools</item>
        <item>ENVIRONMENT SETUP: Ollama model updates, new environment variables, configuration changes</item>
        <item>WORKFLOW UPDATES: New development scripts, testing procedures, deployment processes</item>
        <item>FEATURE COMPLETION: Major milestones, enhanced AI updates, UI improvements</item>
        <item>TOOLING CHANGES: New testing frameworks, build tools, development utilities</item>
        <item>DOCUMENTATION STRUCTURE: New docs, reorganized files, updated cross-references</item>
      </list>
    </when_to_update>
    <update_guidelines>
      - Keep prerequisites current with actual project requirements and package.json engines
      - Verify all setup commands work on clean environments before documenting
      - Update status sections when major features are completed or enhanced
      - Maintain step-by-step verification procedures with expected outputs
      - Cross-reference with COMMANDS.md for command syntax and TROUBLESHOOTING.md for common issues
      - Include version numbers and compatibility requirements for all tools
    </update_guidelines>
    <setup_verification_checklist>
      - All prerequisite tools installed with correct versions
      - Ollama AI service running with required model (llama3.1:8b)
      - Backend health endpoint responding correctly
      - Frontend development server accessible
      - Enhanced AI integration functional (not falling back to mock data)
      - Professional UI features rendering properly (Heroicons, accessibility)
      - Complete test suite passing (unit, integration, E2E)
    </setup_verification_checklist>
    <workflow_integration>
      - Daily development startup sequence with service verification
      - Testing strategy explanation for different test types
      - Development cycle patterns for enhanced AI features
      - Quality gates and validation procedures
      - Cross-document references for detailed technical guidance
    </workflow_integration>
    <ai_assistance_usage>
      - Reference this document for complete environment setup before troubleshooting
      - Use verification checkpoints to diagnose setup issues systematically
      - Check current status sections to understand implemented features and capabilities
      - Cross-reference with COMMANDS.md for specific command syntax and options
      - Consult TROUBLESHOOTING.md for common setup and integration issues
      - Validate that setup instructions align with current project dependencies and requirements
    </ai_assistance_usage>
    <category>onboarding</category>
    <last_updated>July 2025</last_updated>
  </metadata>

  <section name="welcome">
    <title>Onboarding Guide for SmartPack</title>
    <content>Welcome! This guide will help you (or future contributors) get up and running quickly.</content>
  </section>

  <section name="prerequisites">
    <title>Prerequisites</title>
    <list>
      <item><strong>Node.js</strong> v20.14.0+ (LTS)</item>
      <item><strong>npm</strong> 10.7.0+</item>
      <item><strong>Ollama</strong> (local AI service)
        <list>
          <item>Download from: https://ollama.ai/</item>
          <item>Must have llama3.1:8b model installed</item>
        </list>
      </item>
      <item><strong>Modern Browser</strong>: For Heroicons vector icon rendering and accessibility features</item>
      <item><strong>(Optional)</strong> AWS CLI (configured) for deployment</item>
      <item><strong>(Optional)</strong> AWS S3 bucket for frontend deployment</item>
      <item><strong>Testing Environment</strong>: Playwright for E2E test execution</item>
    </list>
  </section>

  <section name="setup_steps">
    <title>Setup Steps</title>

    <subsection name="step1">
      <title>1. Clone the repository</title>
    </subsection>

    <subsection name="step2">
      <title>2. Install Ollama and AI model:</title>
      <code_block format="bash">
        <![CDATA[
# Download Ollama from https://ollama.ai/
ollama pull llama3.1:8b
ollama serve  # Start service on port 11434
        ]]>
      </code_block>
    </subsection>

    <subsection name="step3">
      <title>3. Install project dependencies:</title>
      <code_block format="bash">
        <![CDATA[
npm install --legacy-peer-deps
        ]]>
      </code_block>
    </subsection>

    <subsection name="step4">
      <title>4. Copy environment configuration:</title>
      <code_block format="bash">
        <![CDATA[
# Copy .env.example to .env and configure (see ENVIRONMENT.md)
# Key variables: OLLAMA_HOST=http://localhost:11434, OLLAMA_MODEL=llama3.1:8b
        ]]>
      </code_block>
    </subsection>

    <subsection name="step5">
      <title>5. Start development environment:</title>
      <code_block format="bash">
        <![CDATA[
# Terminal 1: Ollama service (if not running as system service)
ollama serve

# Terminal 2: AI-integrated backend
npm run lambda:dev

# Terminal 3: Frontend
npm run dev
        ]]>
      </code_block>
    </subsection>

    <subsection name="step6">
      <title>6. Verify complete setup:</title>
      <list>
        <item><strong>Ollama AI</strong>: `http://localhost:11434` (service running)</item>
        <item><strong>Backend Health</strong>: `http://localhost:3000/health` (API ready)</item>
        <item><strong>Frontend</strong>: `http://localhost:5173` (UI running)</item>
        <item><strong>AI Integration Test</strong>: Create trip and verify real AI-generated recommendations (not mock data)</item>
        <item><strong>Professional UI Check</strong>: Confirm Heroicons vector icons render properly</item>
      </list>
    </subsection>

    <subsection name="step7">
      <title>7. Run comprehensive test suite:</title>
      <code_block format="bash">
        <![CDATA[
npm test -- --run              # Unit/Integration tests
npx playwright test            # E2E tests
npm test -- enhancedAI        # AI-specific validation
        ]]>
      </code_block>
    </subsection>
  </section>

  <section name="development_workflow">
    <title>Development Workflow</title>

    <subsection name="daily_development_setup">
      <title>Daily Development Setup</title>
      <ordered_list>
        <item><strong>Verify Ollama</strong>: `ollama list` (confirm llama3.1:8b available)</item>
        <item><strong>Start AI-Integrated Backend</strong>: `npm run lambda:dev`</item>
        <item><strong>Start Professional UI Frontend</strong>: `npm run dev` (separate terminal)</item>
        <item><strong>Validate AI Integration</strong>: Test that checklist generation uses real AI (not fallback)</item>
        <item><strong>Verify Enhanced Features</strong>: Test intelligent recommendations and professional icons</item>
        <item><strong>Development Cycle</strong>: Make changes → Test AI integration → Run test suite → Commit</item>
      </ordered_list>
    </subsection>

    <subsection name="enhanced_testing_strategy">
      <title>Enhanced Testing Strategy</title>
      <list>
        <item><strong>Unit Tests</strong>: `npm test -- --run` (enhanced AI logic and services)</item>
        <item><strong>Integration Tests</strong>: `npm test -- enhancedAI.integration.test.tsx` (component interactions)</item>
        <item><strong>E2E Tests</strong>: `npx playwright test` (full user workflows with intelligent AI)</item>
        <item><strong>Enhanced AI Validation</strong>: Test context-aware recommendations vs. repetitive suggestions</item>
        <item><strong>Professional UI Testing</strong>: Verify Heroicons icons render and accessibility compliance</item>
        <item><strong>Manual Testing</strong>: Test AI Suggestions panel with varied trip scenarios</item>
        <item><strong>Health Check</strong>: Ensure enhanced backend responds at `http://localhost:3000/health`</item>
      </list>
    </subsection>
  </section>

  <section name="key_docs">
    <title>Key Docs</title>
    <list>
      <item>[copilotdocs/COMMANDS.md](../copilotdocs/COMMANDS.md): Common commands and troubleshooting</item>
      <item>[copilotdocs/CHECKLIST.md](../copilotdocs/CHECKLIST.md): Feature/milestone progress</item>
      <item>[copilotdocs/DEVLOG.md](../copilotdocs/DEVLOG.md): Major changes and troubleshooting sessions</item>
      <item>[copilotdocs/ARCHITECTURE.md](../copilotdocs/ARCHITECTURE.md): System architecture and component overview</item>
      <item>[copilotdocs/TROUBLESHOOTING.md](../copilotdocs/TROUBLESHOOTING.md): Common issues and solutions</item>
      <item>[.github/prompts/ROADMAP.md](../.github/prompts/ROADMAP.md): Project roadmap</item>
      <item>[.github/copilot-instructions.md](../.github/copilot-instructions.md): AI coding/workflow rules</item>
    </list>
  </section>

  <section name="current_status">
    <title>Current Status (Enhanced AI System Complete)</title>

    <subsection name="enhanced_ai_backend">
      <title>Enhanced AI Backend Implementation:</title>
      <list>
        <item>7-aspect intelligent trip analysis (destinations, dates, modes, weather, purpose, duration, preferences)</item>
        <item>Context-aware packing recommendations replacing repetitive static suggestions</item>
        <item>Smart quantity calculations based on trip specifics</item>
      </list>
    </subsection>

    <subsection name="professional_ui_upgrade">
      <title>Professional UI Upgrade:</title>
      <list>
        <item>Heroicons React vector icon system with ARIA accessibility</item>
        <item>Professional design replacing emoji-based elements</item>
        <item>Optimized performance with tree-shaking</item>
      </list>
    </subsection>

    <subsection name="comprehensive_testing_suite">
      <title>Comprehensive Testing Suite:</title>
      <list>
        <item>Unit tests (enhancedAI.unit.test.ts)</item>
        <item>API service coverage with intelligent behavior validation</item>
        <item>Integration tests (enhancedAI.integration.test.tsx)</item>
        <item>Complete user workflow testing</item>
        <item>E2E tests (enhancedAI.e2e.test.ts)</item>
        <item>8 real browser scenarios covering all trip types</item>
        <item>Test coverage following external best practices (Kent C. Dodds, React Testing Library)</item>
      </list>
    </subsection>

    <subsection name="all_core_features_enhanced">
      <title>All Core Features Enhanced:</title>
      <list>
        <item>Trip planning with intelligent geocoding and weather integration</item>
        <item>Dynamic context-aware packing checklist with smart categories</item>
        <item>Enhanced AI Suggestions Panel with intelligent custom prompts</item>
        <item>Professional responsive design with dark/light mode</item>
        <item>Enhanced local backend with intelligent Ollama integration</item>
        <item>Comprehensive test coverage (100% enhanced AI coverage)</item>
      </list>
    </subsection>

    <content><strong>Ready for Production Deployment with Enhanced Intelligence</strong></content>
  </section>

  <section name="updating_docs">
    <title>Updating Docs</title>
    <list>
      <item>Always update `COMMANDS.md`, `CHECKLIST.md`, and `DEVLOG.md` as you develop.</item>
      <item>Reference this file for onboarding new contributors.</item>
    </list>
  </section>
</document>